.. _data_handler_appendix_part_01_10:

************************************
データ送信量及び回線速度について
************************************

ビーコンやデバイスからの情報取得量に対して、データ送信が遅い場合には、
OpenBlocksシリーズ内のバッファーに情報が溜まっていきます。
この場合、データ送信部の改善を行わない場合には溜まり続けてしまう為、
バッファーデータを確認しインターバルや取得時間間隔等を調整してください。

.. note::
    バッファーデータは「サービス」→「状態」タブにてバッファーファイルのサイズを確認できます。

*********************************************
PD Repeaterへの書き込みデータフォーマット
*********************************************

PD RepeaterはJSON形式のデータを扱うことを前提としていますが、
接続先によっては、JSON形式でない文字列を扱うことができます。

.. list-table::  非JSON形式の文字列に対応可能な接続先
    :header-rows: 1

    * - クラウド
      - 非JSON形式対応
    * - PD Exchange
      - 
    * - MQTTサーバー
      - 〇
    * - Watson IoT for Device	
      - 
    * - Amazon Kinesis
      - 〇
    * - WEBサーバー
      - 	
    * - AWS IoT
      - 〇
    * - MS Azure Event hubs
      - 〇
    * - Watson IoT for Gateway
      - 	
    * - MS Azure IoT Hub
      - 〇
    * - Toami for DOCOMO
      - 
    * - ドメインソケット
      - 〇
    * - KDDI IoT クラウドStandard
      - 	
    * - PH社独自仕様WEBサーバー	
      - 
    * - Google IoT Core
      - 〇
    * - TCP
      - 〇
    * - AWS IoT[Websocket]
      - 〇
    * - MS Azure IoT Hub[Websocket]	
      - 〇
    * - SoftBankスマ可視専用クラウド
      - 〇

*********************************************
PD Repeaterへのデータの書き込みサイズ
*********************************************

| PD Repeaterへのデータの書き込みサイズはデバイス毎に変更することが可能ですが、
  大きくすればするほどメモリを消費しパフォーマンスも低下するため、
  データのサイズに応じ可能な限り小さくしておくことを推奨します。
| また、クラウドによって規定されている最大値も異なるため、使用するクラウドの仕様をご確認の上、設定して下さい。

*********************************************
PD Repeaterのバッファーサイズ
*********************************************

| PD Repeaterは送信用のバッファーとして一時溜めこみを行う為、DBにバッファーとして書き込みます。
  各調整を行っていない場合、DBのサイズ上限のデフォルトは16Mbyteです。
| このサイズを超えた場合、新しいデータは廃棄され、
  DBのサイズが8Mbyte以下(データベースの最大サイズの半分)になるまでデータの受信は行われません。

*********************************************
Repeaterのエラー時の再送信
*********************************************

| ネットワークの通信状況によって、PD Repesterからクラウドに対しての送信が失敗することがあります。
| この時、連続４回失敗した場合や想定外のエラー状態が発生した場合には、1分後に再送信処理を開始します。

**************************************************
独自開発アプリケーションの設定ファイルについて
**************************************************

| ユーザー側にて作成した独自開発アプリケーションの設定ファイル（Config）作成機能は存在していません。
| ユーザー様側にて各筐体に保存する必要がありますので、ファイルアップロード機能等をご使用ください。

*********************************************
Node-REDへのデータ経由方法について
*********************************************

| PD RepeaterからNode-RED へのデータはUnixドメインソケット経由となります。
| PD Repeaterが各データにて書き込むUnixドメインソケットのパスは以下のものとなります。

    <ソケットパスプレフィックス>/<デバイス番号>.sock

PD Repeater においては、パス名の先頭を '@' とすることでAbstract Domain Socketとして扱います。
（:ref:`pd_repeater_lsocket` を参照して下さい。）

| Node-RED側では、対象デバイスのipc-inノードを入力としてFlowに用意してください。
| OpenBlocksシリーズにインストールされているipc-inノードは、Abstract Domain Socketが扱えるよう拡張されています。
| パス名はipc-inノードのプロパティの「Path」に設定して下さい。パス名をAbstract Domain Socketとして扱いたい場合は、
  同プロパティの「Abstract Flag」をチェックして下さい。PD Repeaterとは異なり、
  パス名の先頭に'@'を記載する必要はありません。

*********************************************
BLEデバイスとして追加したビーコンについて
*********************************************

| WEB UIにBLEデバイスとして登録し送信対象として設定したセンサーやビーコンは個別に扱われます。
| この場合において、特にビーコンデバイスはビーコンの送信設定との依存が無くなります。そのため、
  ビーコン送信設定の制御タイプ、データフィルタ等は適用されません。
| また、対応しているセンサー付きビーコンのPD Repeaterへ渡すデータは、解析されたセンサーデータとなります。
  しかし、通常のビーコンの場合は時刻/デバイスID/メモ情報をPD Repeaterへ渡します。

*********************************************
WEBサーバーへのデータ送信について
*********************************************

| PD Repeater(OpenBlocks IoTのファームウェア)側からは、指定したURLのEndpointに対してHTTP POSTメソッドで送信します。
| そのため、HTTPサーバ側ではHTTP 200番台のステータスコードを返す必要があります。
| HTTP 200番台のステータスコードを返却する際、HTTPヘッダやペイロードで必要なものはありません。
| 尚、HTTP 200番台以外のステータスが返された場合、PD Repeater(OpenBlocks IoTのファームウェア)側ではエラーとして扱います。

*********************************************
Handlerコンフィグユーザー設定
*********************************************

| 「IoTデータ」→「アプリ設定」タブより、Handlerコンフィグ設定を「ユーザー定義コンフィグ」を選択し保存することで使用するものがユーザー定義のものへと切り替わります。
| ファイル編集自体については、「IoTデータ」→「編集」タブから編集を適用してください。
| 尚、本機能を用いた場合、サポート対象外となります。

.. raw:: latex

   \clearpage
