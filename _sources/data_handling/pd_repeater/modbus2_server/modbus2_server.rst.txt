.. _pd_handler_modbus2_server:

Modbus2サーバデバイス設定
==============================

| Modbus2サーバーはModbusモデリングファイルに基づくレジスタマップを保持し、
  PLC機器からのModbusプロトコルによる接続を待ち受け、
  PLC機器の書き込み操作によりレジスタの値を更新すると共に更新されたレジスタとその値をModbusモデリングファイルに
  基づきPD Repeaterを介してクラウドに送ります。
| また、PD Repeaterを介してクラウドから送られるModbusモデリングファイルに基づく制御メッセージ(JSON文字列)により
  レジスタマップを読み書きすることもできます。
| WEB UIの「IoTデータ」→「送受信設定」タブの「Modbus2サーバーデバイス設定」メニューより、
  Modbusサーバーデバイスの設定を行うことが出来ます。
| Modbus2サーバーデバイスを利用するためには、WEB UIの「サービス」→「基本」→「Modbus2(S)登録」タブより、
  サービス機能の基本設定としてModbus2サーバーデバイスが登録されている必要があります。
| サービス機能の基本設定については、:ref:`webui` の :ref:`webui_service` を参照して下さい。
| 「Modbus2サーバーデバイス設定」メニューが表示されていない場合は、:ref:`data_handler_application` を参照し、
  PD Handler MODBUS2 Serverを「使用する」に設定して下さい。
| ModbusモデリングファイルにPLC機器のモデリング定義を追加したい場合は、:ref:`data_handler_reference` の
  :ref:`data_handler_reference_modbus2` を参照して下さい。

.. figure:: modbus2_server_init.png
  :scale: 100%

登録済のModbus2サーバーデバイスが存在している場合、初期状態では上図のようになっています。(デバイスが１個登録されている場合です。)

| デバイス毎に送信対象項目にて「送信する」を選択すると各設定項目が表示されます。
| 送信対象一括有効、送信対象一括無効ボタンにて全ての登録済のデバイスの送信対象を制御できます。

「送信する」を選択すると各設定項目が次のように表示されます。

.. raw:: html

   <br><br>

.. raw:: latex

   \clearpage

■ Modbus2サーバーデバイスのDevice Type（待ち受けタイプ）が「TCP」で登録されている場合

.. figure:: modbus2_server_tcp.png
  :scale: 100%

  Device Type が「TCP」で登録されている場合の表示

.. list-table:: Modbus2サーバデバイス設定(Device Type「TCP」)の設定項目
    :widths: 30 70
    :header-rows: 1

    * - 設定項目
      - 説明
    * - デバイス番号
      - OpenBlocksシリーズのWEB UI内で管理している番号です。変更はできません。
    * - データ間引間隔
      - データを間引くための入力データを受け取らない時間をmsec単位で設定します。　
        0の場合、間引きは行われません。
    * - バッファーサイズ
      - データの最大サイズを設定します。単位はバイトです。
    * - 受信設定
      - PD Repeaterを介してクラウドからの制御メッセージを受けるか否かを選択します。
    * - ユーザーメモ
      - 登録されたデバイスにて設定されたメモ情報を表示します。
    * - 固定情報付与(JSON)
      - データに付加する静的情報をJSON文字列で設定します。
    * - モデル/SKU
      - プルダウンメニューからサーバーに使用するモデルを選択します。
        表示されるモデルはModbusモデリングファイルに記載されているものとなります。
    * - ユニットID
      - サーバーのModbus ユニットIDを設定します。ユニットIDは、1～247または255の数値です。
    * - タイムアウト[ms]
      - PLC機器からアクセスされる際のタイムアウトを設定します。単位はミリ秒です。
    * - 送信先設定
      - "使用する"を選択した送信先に対してチェックボックスが選択できるようになります。 
        チェックを付けた送信先に対して、送信を行います。　
        チェックをつけると送信先固有の設定項目が表示されます。　
        送信先固有の設定については、:ref:`pd_repeater_device` を参照して下さい。

.. note::
  * TCPで待ち受ける場合、ModbusプロトコルのTCPポート（502）を開放しておく必要があります。　
    WEB UIの「システム」→「フィルター」タブの「フィルター開放設定」メニューにおいて「Modbus」を「有効」に設定して下さい。　
  * WEB UIから登録できるDevice Type（待ち受けタイプ）が「TCP」のModbusサーバーデバイスは、TCPポート（502）の
    開放操作の兼ね合いから１つに制限されています。

.. raw:: html

   <br><br>

.. raw:: latex

   \clearpage

■ Modbus2サーバーデバイスのDevice Type（待ち受けタイプ）が「RTU」で登録されている場合

.. figure:: modbus2_server_rtu.png
  :scale: 100%

  Device Type が「RTU」で登録されている場合の表示

.. list-table:: Modbus2サーバデバイス設定(Device Type「RTU」)の設定項目
    :widths: 30 70
    :header-rows: 1
    
    * - 設定項目
      - 説明
    * - デバイス番号
      - OpenBlocksシリーズのWEB UI内で管理している番号です。変更はできません。
    * - データ間引間隔
      - データを間引くための入力データを受け取らない時間をmsec単位で設定します。　
        0の場合、間引きは行われません。
    * - バッファーサイズ
      - データの最大サイズを設定します。単位はバイトです。
    * - バッファーサイズ
      - データの最大サイズを設定します。単位はバイトです。
    * - 受信設定
      - PD Repeaterを介してクラウドからの制御メッセージを受けるか否かを選択します。
    * - ユーザーメモ
      - 登録されたデバイスにて設定されたメモ情報を表示します。
    * - 固定情報付与(JSON)
      - データに付加する静的情報をJSON文字列で設定します。
    * - モデル/SKU
      - プルダウンメニューからサーバーに使用するモデルを選択します。
        表示されるモデルはModbusモデリングファイルに記載されているものとなります。
    * - ユニットID
      - サーバーのModbus ユニットIDを設定します。ユニットIDは、1～247または255の数値です。
    * - タイムアウト[ms]
      - PLC機器からアクセスされる際のタイムアウトを設定します。単位はミリ秒です。
    * - デバイスファイル
      - PLC機器からの接続を待ち受けるシリアルポートのデバイスファイル名を設定します。
    * - ボー・レート
      - PLC機器からの接続を待ち受けるシリアルポートのボー・レートを選択します。
    * - パリティビット
      - シリアルポートのパリティビットを選択します。
    * - データビット
      - シリアルポートのデータビット数を選択します。
    * - ストップビット
      - シリアルポートのストップビット数を選択します。
    * - ユニットID
      - PLC機器からの接続を待ち受けるOpenbloks IoT Family側のModbus ユニットIDを設定します。　
        ユニットIDは、１～247の数値です。
    * - 送信先設定
      - "使用する"を選択した送信先に対してチェックボックスが選択できるようになります。 
        チェックを付けた送信先に対して、送信を行います。　
        チェックをつけると送信先固有の設定項目が表示されます。　
        送信先固有の設定については、:ref:`pd_repeater_device` を参照して下さい。

.. note::
  * Device Type（待ち受けタイプ）が「RTU」のModbus2サーバーデバイスは、複数登録することが可能ですが、
    「デバイスファイル」の設定が重複した場合の動作は保障されません。

.. raw:: latex

   \clearpage
